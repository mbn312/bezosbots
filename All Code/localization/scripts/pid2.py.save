#!/usr/bin/env python
# license removed for brevity
import rospy
from ctrl_pkg.msg import ServoCtrlMsg
from std_msgs.msg import Float64
import numpy as np

pub = rospy.Publisher('/manual_drive', ServoCtrlMsg, queue_size=10)
angle = 0.0

def control_data_input(msg):
    global angle

    err = msg.data
    cntrl = ServoCtrlMsg()
    cntrl.throttle = .5
    p = 0.7

    if (abs(err) < 0.2):
        err=0

    angle = angle - p*(err)

    if (angle < -1.0):
        angle = -1.0
    if (angle > 1.0):
        angle = 1.0
    print(ang;aaaaaaaaaaaaaksojkspopsjkjpsjjajaopa
    cntrl.angle = np.clip(angle,-1.0,1.0)
    pub.publish(cntrl)
    
def throttle_input(msg):
    msg.throttle = np.clip(msg.throttle,0.0,0.4)
    pub.publish(msg)


if __name__ == '__main__':
    try:
        rospy.init_node('manual_drive')
        rospy.Subscriber('/error',
                        Float64,
                        control_data_input)
        rospy.Subscriber('/new_manual_drive',
                        ServoCtrlMsg,
                        throttle_input)
        rospy.spin()
    except rospy.ROSInterruptException:
        cntrl.angle = np.clip(angle,-1.0,1.0)
        msg.throttle = np.clip(msg.throttle,0.0,0.4)
        pub.publish(cntrl)
        pub.publish(msg)
